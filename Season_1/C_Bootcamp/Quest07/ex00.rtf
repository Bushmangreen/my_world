{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red202\green202\blue202;\red89\green138\blue67;\red23\green23\blue23;
\red183\green111\blue179;\red194\green126\blue101;\red70\green137\blue204;\red140\green211\blue254;\red167\green197\blue152;
\red205\green173\blue106;\red212\green214\blue154;}
{\*\expandedcolortbl;;\cssrgb\c83137\c83137\c83137;\cssrgb\c41569\c60000\c33333;\cssrgb\c11765\c11765\c11765;
\cssrgb\c77255\c52549\c75294;\cssrgb\c80784\c56863\c47059;\cssrgb\c33725\c61176\c83922;\cssrgb\c61176\c86275\c99608;\cssrgb\c70980\c80784\c65882;
\cssrgb\c84314\c72941\c49020;\cssrgb\c86275\c86275\c66667;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh4440\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\cf3 \cb4 \strokec3 //#include<stdio.h>\'a0\cf2 \cb1 \strokec2 \
\cf3 \cb4 \strokec3 //#include<string.h>\'a0\cf2 \cb1 \strokec2 \
\cf5 \cb4 \strokec5 #include\cf6 \strokec6 <unistd.h>\cf7 \strokec7 \'a0\cf2 \cb1 \strokec2 \
\cf3 \cb4 \strokec3 //#include<fcntl.h>\'a0\cf2 \cb1 \strokec2 \
\cf5 \cb4 \strokec5 #include\cf6 \strokec6 <stdlib.h>\cf7 \strokec7 \'a0\cf2 \cb1 \strokec2 \
\cb4 \'a0\'a0\cb1 \
\
\cf5 \cb4 \strokec5 #define\cf7 \strokec7 \'a0EVEN(\cf8 \strokec8 x\cf7 \strokec7 )\'a0(x\cf2 \strokec2 %\cf9 \strokec9 2\cf2 \strokec2 !=\cf9 \strokec9 0\cf7 \strokec7 )\cf2 \cb1 \strokec2 \
\cf5 \cb4 \strokec5 #define\cf7 \strokec7 \'a0SUCCESS\'a0\cf9 \strokec9 0\cf2 \cb1 \strokec2 \
\cf5 \cb4 \strokec5 #define\cf7 \strokec7 \'a0EVEN_MSG\'a0\cf6 \strokec6 "I\'a0have\'a0an\'a0even\'a0number\'a0of\'a0arguments.\cf10 \strokec10 \\n\cf6 \strokec6 "\cf2 \cb1 \strokec2 \
\cf5 \cb4 \strokec5 #define\cf7 \strokec7 \'a0ODD_MSG\'a0\cf6 \strokec6 "I\'a0have\'a0an\'a0odd\'a0number\'a0of\'a0arguments.\cf10 \strokec10 \\n\cf6 \strokec6 "\cf2 \cb1 \strokec2 \
\cf3 \cb4 \strokec3 //#define\'a0TRUE\'a01\cf2 \cb1 \strokec2 \
\cf3 \cb4 \strokec3 //#define\'a0FALSE\'a00\cf2 \cb1 \strokec2 \
\cf7 \cb4 \strokec7 typedef\cf2 \strokec2 \'a0\cf7 \strokec7 enum\cf2 \strokec2 \'a0\{\cf7 \strokec7 FALSE\cf2 \strokec2 ,\'a0\cf7 \strokec7 TRUE\cf2 \strokec2 \}\'a0t_bool;\cb1 \
\cf3 \cb4 \strokec3 /*\cf2 \cb1 \strokec2 \
\cf3 \cb4 \strokec3 Input:\'a01\cf2 \cb1 \strokec2 \
\cf3 \cb4 \strokec3 Output:\'a0\cf2 \cb1 \strokec2 \
\cf3 \cb4 \strokec3 Return\'a0Value:\'a0"I\'a0have\'a0an\'a0odd\'a0number\'a0of\'a0arguments."\cf2 \cb1 \strokec2 \
\
\cf3 \cb4 \strokec3 Input:\'a02\cf2 \cb1 \strokec2 \
\cf3 \cb4 \strokec3 Output:\'a0\cf2 \cb1 \strokec2 \
\cf3 \cb4 \strokec3 Return\'a0Value:\'a0"I\'a0have\'a0an\'a0even\'a0number\'a0of\'a0arguments."\cf2 \cb1 \strokec2 \
\
\cf3 \cb4 \strokec3 */\cf2 \cb1 \strokec2 \
\cf7 \cb4 \strokec7 void\cf2 \strokec2 \'a0\cf11 \strokec11 my_putstr\cf2 \strokec2 (\cf7 \strokec7 char\cf2 \strokec2 \'a0*\cf8 \strokec8 str\cf2 \strokec2 )\cb1 \
\cb4 \{\cb1 \
\cb4 \'a0\'a0\'a0\'a0\cf7 \strokec7 int\cf2 \strokec2 \'a0index;\cb1 \
\
\cb4 \'a0\'a0\'a0\'a0index\'a0=\'a0\cf9 \strokec9 0\cf2 \strokec2 ;\cb1 \
\cb4 \'a0\'a0\'a0\'a0\cf5 \strokec5 while\cf2 \strokec2 \'a0(\cf8 \strokec8 str\cf2 \strokec2 [index]\'a0!=\'a0\cf6 \strokec6 '\cf10 \strokec10 \\0\cf6 \strokec6 '\cf2 \strokec2 )\'a0\{\cb1 \
\cb4 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf11 \strokec11 write\cf2 \strokec2 (\cf9 \strokec9 1\cf2 \strokec2 ,\'a0&\cf8 \strokec8 str\cf2 \strokec2 [index],\'a0\cf9 \strokec9 1\cf2 \strokec2 );\cb1 \
\cb4 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0index++;\cb1 \
\cb4 \'a0\'a0\'a0\'a0\}\cb1 \
\cb4 \}\cb1 \
\
\cb4 t_bool\'a0\'a0\cf11 \strokec11 my_is_even\cf2 \strokec2 (\cf7 \strokec7 int\cf2 \strokec2 \'a0\cf8 \strokec8 nbr\cf2 \strokec2 )\cb1 \
\cb4 \{\cb1 \
\cb4 \'a0\'a0\'a0\'a0\cf5 \strokec5 return\cf2 \strokec2 \'a0((\cf11 \strokec11 EVEN\cf2 \strokec2 (nbr))\'a0?\'a0\cf7 \strokec7 TRUE\cf2 \strokec2 \'a0:\'a0\cf7 \strokec7 FALSE\cf2 \strokec2 );\cb1 \
\cb4 \}\cb1 \
\
\cf3 \cb4 \strokec3 /*\cf2 \cb1 \strokec2 \
\cf3 \cb4 \strokec3 char*\'a0my_define(int\'a0num)\'a0\{\cf2 \cb1 \strokec2 \
\
\
\cf3 \cb4 \strokec3 \}\cf2 \cb1 \strokec2 \
\cf3 \cb4 \strokec3 */\cf2 \cb1 \strokec2 \
\
\cf7 \cb4 \strokec7 int\cf2 \strokec2 \'a0\cf11 \strokec11 my_main\cf2 \strokec2 (\cf7 \strokec7 int\cf2 \strokec2 \'a0\cf8 \strokec8 argc\cf2 \strokec2 )\cb1 \
\cb4 \{\cb1 \
\cb4 \'a0\'a0\'a0\'a0\cb1 \
\cb4 \'a0\'a0\'a0\'a0\cf5 \strokec5 if\cf2 \strokec2 \'a0(\cf11 \strokec11 my_is_even\cf2 \strokec2 (argc\'a0-\'a0\cf9 \strokec9 1\cf2 \strokec2 )\'a0==\'a0\cf7 \strokec7 TRUE\cf2 \strokec2 )\cb1 \
\cb4 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf11 \strokec11 my_putstr\cf2 \strokec2 (EVEN_MSG);\cb1 \
\cb4 \'a0\'a0\'a0\'a0\cf5 \strokec5 else\cf2 \cb1 \strokec2 \
\cb4 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf11 \strokec11 my_putstr\cf2 \strokec2 (ODD_MSG);\cb1 \
\cb4 \'a0\'a0\'a0\'a0\cf5 \strokec5 return\cf2 \strokec2 \'a0(SUCCESS);\cb1 \
\cb4 \}\cb1 \
\
}